{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AAEvC,EAAiJ,AAAjJ,+IAAiJ;AACjJ,KAAK,CAAC,UAAU,oBAAqB,CAAC;IACpC,GAAG,CAAC,CAAC;QACH,EAAoB,AAApB,kBAAoB;QACpB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACrB,CAA2E;QAE7E,EAA8D,AAA9D,4DAA8D;QAC9D,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAE3B,EAA2E,AAA3E,yEAA2E;QAC3E,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAE7D,EAAuC,AAAvC,qCAAuC;QACvC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;QACjC,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI;IACrB,EAA6D,AAA7D,2DAA6D;IAC/D,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,GAAG;IACX,CAAC;AACH,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\n// Async function named showRecipe | Once called, it will fetch for the API in the background --Convert the response into JSON and save as a data\nconst showRecipe = async function () {\n  try {\n    // Fetch for the API\n    const res = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n    // Convert constant \"res\" to JSON | Save it to constant \"data\"\n    const data = await res.json();\n\n    // Throw new error message base off of what the console says in each object\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n\n    // Changing underscore objects with \".\"\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n    console.log(recipe);\n\n    console.log(res, data);\n    // Catch if there are any errors and display them if it does.\n  } catch (err) {\n    alert(err);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}